// <auto-generated />
using System;
using H2Oasis.Api.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace H2Oasis.Api.Migrations
{
    [DbContext(typeof(PlantDbContext))]
    [Migration("20240131203554_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("H2Oasis.Api.Models.Household", b =>
                {
                    b.Property<Guid>("HouseholdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("HouseholdId");

                    b.ToTable("Households");
                });

            modelBuilder.Entity("H2Oasis.Api.Models.Plant", b =>
                {
                    b.Property<Guid>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HouseholdId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("LastWatered")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastWateredBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("WaterAmountInMl")
                        .HasColumnType("int");

                    b.Property<int>("WateringFrequencyInDays")
                        .HasColumnType("int");

                    b.HasKey("PlantId");

                    b.HasIndex("HouseholdId");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("H2Oasis.Api.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("H2Oasis.Api.Models.UserHousehold", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("HouseholdId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "HouseholdId");

                    b.HasIndex("HouseholdId");

                    b.ToTable("UserHouseholds");
                });

            modelBuilder.Entity("H2Oasis.Api.Models.Plant", b =>
                {
                    b.HasOne("H2Oasis.Api.Models.Household", "Household")
                        .WithMany("Plants")
                        .HasForeignKey("HouseholdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Household");
                });

            modelBuilder.Entity("H2Oasis.Api.Models.UserHousehold", b =>
                {
                    b.HasOne("H2Oasis.Api.Models.Household", "Household")
                        .WithMany("UserHouseholds")
                        .HasForeignKey("HouseholdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("H2Oasis.Api.Models.User", "User")
                        .WithMany("UserHouseholds")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Household");

                    b.Navigation("User");
                });

            modelBuilder.Entity("H2Oasis.Api.Models.Household", b =>
                {
                    b.Navigation("Plants");

                    b.Navigation("UserHouseholds");
                });

            modelBuilder.Entity("H2Oasis.Api.Models.User", b =>
                {
                    b.Navigation("UserHouseholds");
                });
#pragma warning restore 612, 618
        }
    }
}
